apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'

// protobuf
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.geeksville.mesh"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true // NOTE, if true main app crashes if you use regular view layout functions
    }

    // Set both the Java and Kotlin compilers to target Java 8.

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// per protobuf-gradle-plugin docs, this is recommended for android
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.9.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    // turned off for now so I can use json printing
                    // option "lite"
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // You need to depend on the lite runtime library, not protobuf-java
    // For now I'm not using javalite, because I want JSON printing
    implementation 'com.google.protobuf:protobuf-java:3.11.1'
    implementation 'com.google.protobuf:protobuf-java-util:3.11.1'
    // implementation 'com.google.protobuf:protobuf-javalite:3.11.1'

    // You also need to include the following Compose toolkit dependencies.
    implementation("androidx.compose:compose-runtime:$compose_version")
    implementation("androidx.ui:ui-framework:$compose_version")
    implementation("androidx.ui:ui-layout:$compose_version")
    implementation("androidx.ui:ui-material:$compose_version")
    implementation("androidx.ui:ui-foundation:$compose_version")
    implementation("androidx.ui:ui-animation:$compose_version")
    implementation "androidx.ui:ui-tooling:$compose_version"
    androidTestImplementation("androidx.ui:ui-platform:$compose_version")
    androidTestImplementation("androidx.ui:ui-test:$compose_version")

    // Add the Firebase SDK for Crashlytics.
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta01'

    // alas implementation bug deep in the bowels when I tried it for my SyncBluetoothDevice class
    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"

    // add SDKs for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    implementation project(':geeksville-androidlib')
}
